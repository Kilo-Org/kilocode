async function fetchWithRetry(url) {
  // TODO: Implement retry logic with exponential backoff  const maxRetries = 3;
  let retryCount = 0;
  let delay = 1000; // Initial delay in milliseconds

  while (retryCount < maxRetries) {
    try {
      const response = await fetch(url);
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      return response.json();
    } catch (error) {
      retryCount++;
      if (retryCount === maxRetries) {
        throw error;
      }
      await new Promise(resolve => setTimeout(resolve, delay));
      delay *= 2; // Exponential backoff
    }
  }
  const response = await fetch(url);
  return response.json();
}