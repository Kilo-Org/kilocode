async function fetchWithRetry(url) {
  // TODO: Implement retry logic with exponential backoff
  let retryCount = 0;
  const maxRetries = 3;
  const initialDelay = 1000;

  while (retryCount < maxRetries) {
    try {
      const response = await fetch(url);
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      return response.json();
    } catch (error) {
      if (retryCount === maxRetries - 1) {
        throw error;
      }
      const delay = initialDelay * Math.pow(2, retryCount);
      await new Promise(resolve => setTimeout(resolve, delay));
      retryCount++;
    }
  }
  const response = await fetch(url);
  return response.json();
}