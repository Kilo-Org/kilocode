// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Mercury Duplication Bug > should create snapshot of suggestion groups for regression testing > mercury-duplication-bug-groups 1`] = `
{
  "allOperations": [
    {
      "content": "<| cursor |>",
      "line": 7,
      "type": "-",
    },
    {
      "content": "export const LINKING_COOKIE_NAME = 'account-linking-session';",
      "line": 8,
      "type": "+",
    },
    {
      "content": "export const LINKING_COOKIE_MAX_AGE = 60 * 5; // 5 minutes",
      "line": 9,
      "type": "+",
    },
    {
      "content": "export const jwtSigningAlgorithm = 'HS256';",
      "line": 10,
      "type": "+",
    },
    {
      "content": "",
      "line": 11,
      "type": "+",
    },
    {
      "content": "export type AccountLinkingSession = {",
      "line": 12,
      "type": "+",
    },
    {
      "content": "existingUserId: string;",
      "line": 13,
      "type": "+",
    },
    {
      "content": "targetProvider: string;",
      "line": 14,
      "type": "+",
    },
    {
      "content": "createdAt: number;",
      "line": 15,
      "type": "+",
    },
    {
      "content": "};",
      "line": 16,
      "type": "+",
    },
    {
      "content": "",
      "line": 17,
      "type": "+",
    },
    {
      "content": "export async function createAccountLinkingSession(",
      "line": 18,
      "type": "+",
    },
    {
      "content": "existingUserId: string,",
      "line": 19,
      "type": "+",
    },
    {
      "content": "targetProvider: string",
      "line": 20,
      "type": "+",
    },
    {
      "content": "): Promise<void> {",
      "line": 21,
      "type": "+",
    },
    {
      "content": "const session: AccountLinkingSession = {",
      "line": 22,
      "type": "+",
    },
    {
      "content": "existingUserId,",
      "line": 23,
      "type": "+",
    },
    {
      "content": "targetProvider,",
      "line": 24,
      "type": "+",
    },
    {
      "content": "createdAt: Date.now(),",
      "line": 25,
      "type": "+",
    },
    {
      "content": "};",
      "line": 26,
      "type": "+",
    },
    {
      "content": "",
      "line": 27,
      "type": "+",
    },
    {
      "content": "const token = jwt.sign(session, NEXTAUTH_SECRET, { algorithm: jwtSigningAlgorithm });",
      "line": 28,
      "type": "+",
    },
    {
      "content": "",
      "line": 29,
      "type": "+",
    },
    {
      "content": "cookies().set(LINKING_COOKIE_NAME, token, {",
      "line": 30,
      "type": "+",
    },
    {
      "content": "maxAge: LINKING_COOKIE_MAX_AGE,",
      "line": 31,
      "type": "+",
    },
    {
      "content": "httpOnly: true,",
      "line": 32,
      "type": "+",
    },
    {
      "content": "secure: process.env.NODE_ENV === 'production',",
      "line": 33,
      "type": "+",
    },
    {
      "content": "});",
      "line": 34,
      "type": "+",
    },
    {
      "content": "}",
      "line": 35,
      "type": "+",
    },
  ],
  "groups": [
    {
      "content": [
        "<| cursor |>",
        "export const LINKING_COOKIE_NAME = 'account-linking-session';",
        "export const LINKING_COOKIE_MAX_AGE = 60 * 5; // 5 minutes",
        "export const jwtSigningAlgorithm = 'HS256';",
        "",
        "export type AccountLinkingSession = {",
        "existingUserId: string;",
        "targetProvider: string;",
        "createdAt: number;",
        "};",
        "",
        "export async function createAccountLinkingSession(",
        "existingUserId: string,",
        "targetProvider: string",
        "): Promise<void> {",
        "const session: AccountLinkingSession = {",
        "existingUserId,",
        "targetProvider,",
        "createdAt: Date.now(),",
        "};",
        "",
        "const token = jwt.sign(session, NEXTAUTH_SECRET, { algorithm: jwtSigningAlgorithm });",
        "",
        "cookies().set(LINKING_COOKIE_NAME, token, {",
        "maxAge: LINKING_COOKIE_MAX_AGE,",
        "httpOnly: true,",
        "secure: process.env.NODE_ENV === 'production',",
        "});",
        "}",
      ],
      "groupIndex": 0,
      "lines": [
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
      ],
      "operations": 29,
      "types": "-++++++++++++++++++++++++++++",
    },
  ],
  "totalGroups": 1,
}
`;
